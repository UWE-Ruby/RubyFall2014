Please Read The Chapters on: 
Containers, Blocks, and Iterators
Sharing Functionality: Inheritance, Modules, and Mixins

1. What is the difference between a Hash and an Array?
A hash is similar to array in that they are indexed collections of object references; however, a hash is indexed with objects like symbols, strings and regular expressions. In other words, two objects are required to store a hash value; it needs both key and the entry to be stored with that key.

An array holds a collection of object references and each reference has a specific position identified by an integer index. Array is indexed using the [] operator.

2. When would you use an Array over a Hash and vice versa?
An Array should be used if order of the values matters. Hash should be used when index with keys makes more sense and reference position does not matter.

3. What is a module? Enumerable is a built in Ruby module, what is it?
Modules are a way of grouping together methods, classes and constants. It provides namespace and prevent name clashes. It also supports the mixin facility.
Enumerable is a standard mixing, it provides collection classes with several traversal and searching methods and with the ability to sort. The objects in the collection must also implement a meaningful operator.

4. Can you inherit more than one thing in Ruby? How could you get around this problem?
In Ruby, inheritance represents tight coupling of two components only; hence, you cannot inherit more than one thing. We need to be using composition instead of inheritance.

5. What is the difference between a Module and a Class?
A module groups together classes and classes in ruby are related to the idea of types.

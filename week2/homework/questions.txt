Please Read The Chapters on: 
Containers, Blocks, and Iterators 
Sharing Functionality: Inheritance, Modules, and Mixins

1. What is the difference between a Hash and an Array?

	Both hashes and arrays are indexed collections of object references. The difference is the way they are indexed. Arrays are indexed with integers only (starting at 0), and hashes are indexed using objects of any type. In hashes, the the indexer is called a key and is provided along with the value to store, allowing you to "look up" a value by providing the key.   

2. When would you use an Array over a Hash and vice versa?

	Hashes are better suited for times when you want to associate or map two objects to each other, such as a customer and their recent purchases. Arrays might be better to use when you don't want any extra overhead and need to access a collection as efficiently as possible. 

3. What is a module? Enumerable is a built in Ruby module, what is it?

	Modules allow you to group together methods, classes and constants. 
	
	Enumerable provides classes with searching and sorting methods using the class's 'each' method. Enumerable can be used on any class that defines an 'each' method and includes the Enumerable module.

4. Can you inherit more than one thing in Ruby? How could you get around this problem?

	Ruby only supports single inheritance, but mixins and modules allow classes to have all the instance methods of that modules, the same way inheritance would. 

5. What is the difference between a Module and a Class?
	
	A module can't have instances. 

Please Read: 
 - Chapter 6 Standard Types
 - Review Blocks
 - Chapter 7 Regular Expressions
 - Chapter 22 The Ruby Language: basic types (symbols), variables and constants

1. What is a symbol?

A symbol is an identifier corresponding to a string. 


2. What is the difference between a symbol and a string?

A string is a sequence of 8-bit bytes. A symbol is derived from a string by placing a colon as the first character of a name (:string) or at the head of a string literal (:"string") or substituted literal (:"#{s}ing"). A particular name or literal will always generate the same symbol.


3. What is a block and how do I call a block?

A block is a chunck of code. So far, we have seen blocks called as an anonymous method passed to an iterator. 


4. How do I pass a block to a method? What is the method signature?

Write the method definition using a parameter signed with an ampersand (&block). That parameter can then take a brace defined block in that parameter space. In addition, the lambda keyword and the Proc class can be used to convert a block into an object, which can be stored and later passed into a method by way of an ampersand signed parameter.


5. Where would you use regular expressions?

Regular expressions are used to search, validate, manipulate and extract from strings. 


